#!/bin/bash

# Author: Bruno Guimar√£es
# Description: Setup development environment turning a raw system into a customized capable system
# Version: 1.0
# Last Updated: 18/03/2024

# Enable alias expansion
shopt -s expand_aliases 


# Helpers
alias apti="sudo apt install -y"
USER_HOME="$HOME"
SCRIPT_PATH=$(dirname "$(realpath "$0")")

# Function to verify ignored softwares
is_ignored_software(){
  local code="$1"
  if [[ -n "$IGNORED_SOFTWARES" && $IGNORED_SOFTWARES != *"$code"* ]]; then
    return 0
  else
    return 1
  fi
}

# Function to display script usage information
usage() {
  cat <<EOF
$(basename $0) - Setup development environment

Description:
    $(basename $0) is a script for setting up a raw system. It allows you to turn a raw system into a customized capable configured system.
    More information at the official repository at: https://github.com/Brunobrlk/dev-environment

Usage:
    $(basename $0) [options] 

Options:
    -h, --help                    Display this help message and exit
    --hd-name=HD_NAME             Receives the external HD name where your user resources are
    --wallpaper=IMAGE             Receives the image name located at Backup/Wallpapers/
    --add-softwares=PACKAGES      Receives a list of softwares to be installed separated by space
    --ignore-all                  This option ignores all default packages that would be installed
    --ignore=PACKAGES             Receives a list of codes related to packages that must be ignored (See github repository: https://github.com/Brunobrlk/dev-environment)

Examples:
    $(basename $0) --hd-name="Bruno" --wallpaper="SaoWallpaper.png" --add-softwares="krita spotify blender" --ignore-all      Will get resources from /media/user/Bruno, set wallpaper to Backup/Pictures/Wallpapers/SaoWallpaper.png and will ignore all default packages and install only krita, spotify and blender.
EOF
exit 0
}

# Parse command-line options
while [[ $# -gt 0 ]]; do
    case $1 in
        -h | --help)
            usage
            ;;
        --hd-name=*)
            HD_NAME="${1#*=}"
            ;;
        --wallpaper=*)
            WALLPAPER="${1#*=}"
            ;;
        --add-softwares=*)
            ADDITIONAL_SOFTWARES="${1#*=}"
            ;;
        --ignore-all)
            IGNORE_ALL=true
            ;;
        --ignore=*)
            IGNORED_SOFTWARES="${1#*=}"
            ;;
        -*)
            echo "Error: Unknown option: $1"
            usage
            ;;
        *)
            break
            ;;
    esac
    shift
done

if [ -z "$HD_NAME" ]; then
  echo "HD_NAME is not set. The script needs the hd name to run. Use --hd-name or setup.properties file. See more with --help"
  exit 1
fi

# Create .local/bin folder if doesn't exist yet
mkdir -p "$USER_HOME/.local/bin"
source "$USER_HOME/.profile"

# Other resources
HD_PATH="/media/$(whoami)/$HD_NAME"
cp -rv "$HD_PATH/Backup/Pictures" "$USER_HOME" & PICTURES_PID=$!
cp -rv "$HD_PATH/Backup/Documents" "$USER_HOME" & DOCUMENTS_PID=$!
cp -rv "$HD_PATH/Backup/Development" "$USER_HOME" & DEVELOPMENT_PID=$!
cp -rv "$HD_PATH/Backup/Videos" "$USER_HOME" & VIDEOS_PID=$!
cp -rv "$HD_PATH/Backup/Music" "$USER_HOME" & MUSIC_PID=$!
cp -rv "$HD_PATH/Backup/Downloads" "$USER_HOME" & DOWNLOADS_PID=$!
cp -rv "$SCRIPT_PATH/.utils" "$USER_HOME" &

## Configurations: Bashrc, Alias, Env vars
cp -rv "$SCRIPT_PATH/home/.bashrc" "$USER_HOME"
cp -rv "$SCRIPT_PATH/home/.bash_aliases" "$USER_HOME"
cp -rv "$SCRIPT_PATH/home/.config/*" "$USER_HOME/.config"
cp -rv "$SCRIPT_PATH/home/.tool-versions" "$USER_HOME"
cp -rv "$SCRIPT_PATH/home/.utils" "$USER_HOME"


## System shortcuts
dconf load /org/cinnamon/desktop/keybindings/ < dconf-shortcuts.conf

# Setup GUI - Install Theme and Change background
DESKTOP_THEME="Adapta-Nokto"
ICON_THEME="Mint-Y-Dark-Blue"

if [ "$(lsb_release -rs)" = "21.3" ]; then
  ICON_THEME="Mint-L-Blue"
fi

mkdir -p "$USER_HOME/.local/share/themes"
unzip "$HD_PATH/Backup/$DESKTOP_THEME.zip"
mv "$SCRIPT_PATH/$DESKTOP_THEME" "$USER_HOME/.local/share/themes/"

gsettings set org.cinnamon.desktop.interface gtk-theme "$DESKTOP_THEME"
gsettings set org.cinnamon.desktop.wm.preferences theme "$DESKTOP_THEME"
gsettings set org.cinnamon.desktop.interface icon-theme "$ICON_THEME"
gsettings set org.cinnamon.desktop.interface gtk-theme "$DESKTOP_THEME"
gsettings set org.cinnamon.desktop.background picture-uri "file://$USER_HOME/Pictures/Wallpapers/$WALLPAPER"

# Install common dependencies
apti build-essential gdb curl libbz2-dev libffi-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev libxml2-dev libxmlsec1-dev llvm make tk-dev wget xz-utils zlib1g-dev bash file git unzip xz-utils jq zip clang cmake ninja-build libgtk-3-dev bat htop tldr tree scrcpy

if [[ $IGNORE_ALL == true ]]; then
  IGNORED_SOFTWARES="#1 #2 #3 #4 #5 #6 #7 #8 #9 #10 #11 #12 #13 #14 #15 #16 #17 #18 #19 #20 #21 #22 #23 #24 #25 #26 #27 #28 #29 #30 #31 #32"
fi

# Building from Source
mkdir -p "$USER_HOME/tmp"
mkdir -p "$USER_HOME/Src"

# Install personal scripts
if ! is_ignored_software "#1"; then
  cp -rv "$SCRIPT_PATH/shell-scripts" "$USER_HOME/.local/bin/"
  cd "$USER_HOME/.local/bin/shell-scripts" && "./setup"
fi

# Install and configure asdf 
if ! is_ignored_software "#2"; then
    "$SCRIPT_PATH/install_asdf.sh"
fi

# Install Lunar Vim
if ! is_ignored_software "#2" && ! is_ignored_software "#3"; then
    "$SCRIPT_PATH/install_lunarvim.sh"
fi

# Install Alacritty - Terminal Emulator
if ! is_ignored_software "#4"; then
    "$SCRIPT_PATH/install_allacrity.sh"
fi

# Install tmux
if ! is_ignored_software "#5"; then
    "$SCRIPT_PATH/install_tmux.sh"
fi

## Install Pomodoro
if ! is_ignored_software "#6"; then
    apti gnome-shell-pomodoro
fi

## Install PCSX2
if ! is_ignored_software "#7"; then
    apti pcsx2
fi

## Install Joystick Calibrator
if ! is_ignored_software "#8"; then
    apti jstest-gtk
fi

## Install Torrent/Transmission
if ! is_ignored_software "#9"; then
    apti transmission
fi

## Install Terminal Translator
if ! is_ignored_software "#10"; then
    apti translate-shell
fi

## Install Google Chrome
if ! is_ignored_software "#11"; then
    "$SCRIPT_PATH/install_chrome.sh"
fi

## Install Firefox
if ! is_ignored_software "#12"; then
    apti firefox
fi

## Install Brave
if ! is_ignored_software "#13"; then
    "$SCRIPT_PATH/install_brave.sh"
fi

## Install Discord
if ! is_ignored_software "#14"; then
    "$SCRIPT_PATH/install_discord.sh"
fi

## Install Skype
if ! is_ignored_software "#15"; then
    apti skypeforlinux
fi

## Install Gimp
if ! is_ignored_software "#16"; then
    apti gimp
fi

## Install Libreoffice
if ! is_ignored_software "#17"; then
    apti libreoffice
fi

## Install Webcam
if ! is_ignored_software "#18"; then
    apti guvcview
fi

## Install Kdenlive
if ! is_ignored_software "#19"; then
    apti kdenlive
fi

## Install OBS Studio
if ! is_ignored_software "#20"; then
    apti obs-studio
fi

## Install Shotcut
if ! is_ignored_software "#21"; then
    apti shotcut
fi

## Install VLC
if ! is_ignored_software "#22"; then
    apti vlc
fi

## Install Anydesk
if ! is_ignored_software "#23"; then
    "$SCRIPT_PATH/install_anydesk.sh"
fi

## Install TeamViewer
if ! is_ignored_software "#24"; then
    "$SCRIPT_PATH/install_teamviewer.sh"
fi

## Install Virt Manager(Require to reboot)
if ! is_ignored_software "#25"; then
    "$SCRIPT_PATH/install_virtmanager.sh"
fi

## Install Dbeaver
if ! is_ignored_software "#26"; then
    "$SCRIPT_PATH/install_dbeaver.sh"
fi

## Install Insomnia
if ! is_ignored_software "#27"; then
    "$SCRIPT_PATH/install_insomnia.sh"
fi

## Install Postman
if ! is_ignored_software "#28"; then
    "$SCRIPT_PATH/install_postman.sh"
fi

## Install Genymotion(Didn't find any mechanism to get the latest version automatically)
if ! is_ignored_software "#29"; then
    "$SCRIPT_PATH/install_genymotion.sh"
fi

## Install vscode
if ! is_ignored_software "#30"; then
    "$SCRIPT_PATH/install_vscode.sh"
fi

## Install IntelliJ
if ! is_ignored_software "#31"; then
    "$SCRIPT_PATH/install_intellij.sh"
fi

# Clean up unused resources
cd
rm -rf "$USER_HOME/tmp"

## Install Android Studio versions and emulators
wait $DOWNLOADS_PID
if ! is_ignored_software "#32"; then
    "$SCRIPT_PATH/install_androidstudio.sh"
fi

# Install additional dependencies
apti $ADDITIONAL_SOFTWARES

# Make the system up to date
sudo apt dist-upgrade -y

echo "Verifying and waiting all copying jobs to finish..."
wait $PICTURES_PID $DOCUMENTS_PID $DEVELOPMENT_PID $VIDEOS_PID $MUSIC_PID
echo "All files have been copied. Script finished successifully!"
